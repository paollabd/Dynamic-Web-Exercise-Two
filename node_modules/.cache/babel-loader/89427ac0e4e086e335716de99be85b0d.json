{"ast":null,"code":"import _slicedToArray from \"/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/src/containers/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport \"./Home.css\";\nimport WeatherIcon from \"../components/WeatherIcon.js\";\nimport PageWrapper from \"./PageWrapper.js\";\nconst apiKey = '1a3d76623f9ad51e2c3ae7f2409329a9';\nexport default function Home(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n\n  useEffect(() => {\n    //setCity('London');\n    //queryWeatherAPI('London');\n    //console.log('weather test', queryWeatherAPI('London'));\n    const urlParams = new URLSearchParams(props.location.search);\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n    setCity(cityParam);\n    console.log('weather test', queryWeatherAPI(cityParam));\n  }, []);\n  console.log('weather', weather); // useEffect(() => {\n  // \tlet getWeatherType = weather.data ? weather.data.weather[0].main : '';\n  // \tlet getCloudy = weather.data ? weather.data.clouds.all : 0;\n  // \tsetWeatherType(getWeatherType)\n  // \tsetCloudy(getCloudy)\n  // }, [weather]); // every time weather changes it runs this useEffect\n\n  return React.createElement(PageWrapper, {\n    className: \"WeatherInfo\",\n    cloudy: weather.data && weather.data.clouds.all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"WeatherNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Amsterdam' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Amsterdam\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Amsterdam\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Brussels' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Brussels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Brussels\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'London' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=London\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"London\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Paris' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Paris\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Paris\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Rome' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Rome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Rome\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Rio de Janeiro' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Rio de Janeiro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Rio de Janeiro\")), React.createElement(\"div\", {\n    className: \"WeatherDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"CityTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Weather in \", city), React.createElement(WeatherIcon, {\n    className: \"WeatherIcon\",\n    weatherType: weather.data && weather.data.weather[0].main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, weather.data && weather.data.weather[0].description), React.createElement(\"div\", {\n    className: \"InfoCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Description: \", weather.data && weather.data.weather[0].description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Current Temperature: \", weather.data && weather.data.main.temp, \" Kelvin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Today's High Temperature: \", weather.data && weather.data.main.temp_max, \" Kelvin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Today's Low Temperature: \", weather.data && weather.data.main.temp_min, \" Kelvin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Humidity: \", weather.data && weather.data.main.humidity), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cloudy: \", weather.data && weather.data.clouds.all), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Wind: \", weather.data && weather.data.wind.speed, \" km/h coming at \", weather.data && weather.data.wind.direction))));\n} // <p>Humidity: {weather.main ? weather.main.humidity : ''}</p>\n// <p>Humidity: {weather.main && weather.main.humidity}</p>","map":{"version":3,"sources":["/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/src/containers/Home.js"],"names":["React","useEffect","useState","axios","WeatherIcon","PageWrapper","apiKey","Home","props","city","setCity","weather","setWeather","queryWeatherAPI","queryCity","get","then","response","console","log","catch","error","urlParams","URLSearchParams","location","search","cityParam","data","clouds","all","main","description","temp","temp_max","temp_min","humidity","wind","speed","direction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport \"./Home.css\"\nimport WeatherIcon from \"../components/WeatherIcon.js\"\nimport PageWrapper from \"./PageWrapper.js\"\n\nconst apiKey = '1a3d76623f9ad51e2c3ae7f2409329a9';\n\nexport default function Home(props) {\n\tconst [city, setCity] = useState('');\n\tconst [weather, setWeather] = useState({});\n\t\n\tfunction queryWeatherAPI(queryCity) {\n\t\taxios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\n\t\t.then(function(response) {\n\t\t\tconsole.log('response', response);\n\t\t\tsetWeather(response);\n\t\t\treturn response;\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tconsole.log('error', error);\n\t\t\treturn error;\t\t\n\t\t});\n\t}\n\t\n\tuseEffect(() => {\n\t\t//setCity('London');\n\t\t//queryWeatherAPI('London');\n\t\t//console.log('weather test', queryWeatherAPI('London'));\n\t\tconst urlParams = new URLSearchParams(props.location.search)\n\t\tconst cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n\t\tsetCity(cityParam);\n\t\tconsole.log('weather test', queryWeatherAPI(cityParam));\n\t}, []);\n\t\n\tconsole.log('weather', weather);\n\n\t// useEffect(() => {\n\t// \tlet getWeatherType = weather.data ? weather.data.weather[0].main : '';\n\t// \tlet getCloudy = weather.data ? weather.data.clouds.all : 0;\n\t// \tsetWeatherType(getWeatherType)\n\t// \tsetCloudy(getCloudy)\n\t// }, [weather]); // every time weather changes it runs this useEffect\n\t\n\treturn (\n\t\t<PageWrapper className=\"WeatherInfo\" cloudy={weather.data && weather.data.clouds.all}>\n\t\t\t<div className=\"WeatherNav\">\n\t\t\t\t<a className={`WeatherNav__Item ${city === 'Amsterdam' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Amsterdam\">Amsterdam</a>\n\t\t\t\t<a className={`WeatherNav__Item ${city === 'Brussels' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Brussels\">Brussels</a>\n\t\t\t\t<a className={`WeatherNav__Item ${city === 'London' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=London\">London</a>\n\t\t\t\t<a className={`WeatherNav__Item ${city === 'Paris' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Paris\">Paris</a>\n\t\t\t\t<a className={`WeatherNav__Item ${city === 'Rome' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Rome\">Rome</a>\n\t\t\t\t<a className={`WeatherNav__Item ${city === 'Rio de Janeiro' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Rio de Janeiro\">Rio de Janeiro</a>\n\t\t\t</div>\n\n\t\t\t<div className=\"WeatherDescription\">\n\t\t\t\t<h1 className=\"CityTitle\">Weather in {city}</h1>\n\t\t\t\t<WeatherIcon className=\"WeatherIcon\" weatherType={weather.data && weather.data.weather[0].main} />\n\t\t\t\t<p>{weather.data && weather.data.weather[0].description}</p>\n\t\t\t\t<div className=\"InfoCard\">\n\t\t\t\t\t<p>Description: {weather.data && weather.data.weather[0].description}</p>\n\t\t\t\t\t<p>Current Temperature: {weather.data && weather.data.main.temp} Kelvin</p>\n\t\t\t\t\t<p>Today's High Temperature: {weather.data && weather.data.main.temp_max} Kelvin</p>\n\t\t\t\t\t<p>Today's Low Temperature: {weather.data && weather.data.main.temp_min} Kelvin</p>\n\t\t\t\t\t<p>Humidity: {weather.data && weather.data.main.humidity}</p>\n\t\t\t\t\t<p>Cloudy: {weather.data && weather.data.clouds.all}</p>\n\t\t\t\t\t<p>Wind: {weather.data && weather.data.wind.speed} km/h coming at {weather.data && weather.data.wind.direction}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</PageWrapper>\n\t);\n}\n\n// <p>Humidity: {weather.main ? weather.main.humidity : ''}</p>\n// <p>Humidity: {weather.main && weather.main.humidity}</p>"]},"metadata":{},"sourceType":"module"}