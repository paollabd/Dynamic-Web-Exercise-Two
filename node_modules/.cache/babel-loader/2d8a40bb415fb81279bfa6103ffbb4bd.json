{"ast":null,"code":"import _slicedToArray from \"/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/src/containers/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst apiKey = '1a3d76623f9ad51e2c3ae7f2409329a9';\nexport default function Home(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n\n  useEffect(() => {\n    setCity('London');\n    queryWeatherAPI('London');\n    console.log('weather test', queryWeatherAPI('London'));\n  }, []);\n  console.log('weather', weather);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Weather in \", city), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Temperature:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Humidity:\"));\n}","map":{"version":3,"sources":["/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/src/containers/Home.js"],"names":["React","useEffect","useState","axios","apiKey","Home","props","city","setCity","weather","setWeather","queryWeatherAPI","queryCity","get","then","response","console","log","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACXJ,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,QAC5BK,IAD4B;AAAA,QACtBC,OADsB;;AAAA,qBAELN,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAE5BO,OAF4B;AAAA,QAEnBC,UAFmB;;AAInC,WAASC,eAAT,CAAyBC,SAAzB,EAAoC;AACnCT,IAAAA,KAAK,CAACU,GAAN,6DAA+DD,SAA/D,oBAAkFR,MAAlF,GACCU,IADD,CACM,UAASC,QAAT,EAAmB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAL,MAAAA,UAAU,CAACK,QAAD,CAAV;AACA,aAAOA,QAAP;AACA,KALD,EAMCG,KAND,CAMO,UAASC,KAAT,EAAgB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACA,aAAOA,KAAP;AACA,KATD;AAUA;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,OAAO,CAAC,QAAD,CAAP;AACAG,IAAAA,eAAe,CAAC,QAAD,CAAf;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,eAAe,CAAC,QAAD,CAA3C;AACA,GAJQ,EAIN,EAJM,CAAT;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAEA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,IAAhB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJD,CADD;AAQA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst apiKey = '1a3d76623f9ad51e2c3ae7f2409329a9';\n\nexport default function Home(props) {\n\tconst [city, setCity] = useState('');\n\tconst [weather, setWeather] = useState({});\n\t\n\tfunction queryWeatherAPI(queryCity) {\n\t\taxios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\n\t\t.then(function(response) {\n\t\t\tconsole.log('response', response);\n\t\t\tsetWeather(response);\n\t\t\treturn response;\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tconsole.log('error', error);\n\t\t\treturn error;\t\t\n\t\t});\n\t}\n\t\n\tuseEffect(() => {\n\t\tsetCity('London');\n\t\tqueryWeatherAPI('London');\n\t\tconsole.log('weather test', queryWeatherAPI('London'));\n\t}, []);\n\t\n\tconsole.log('weather', weather);\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h1>Weather in {city}</h1>\n\t\t\t<p>Description:</p>\n\t\t\t<p>Temperature:</p>\n\t\t\t<p>Humidity:</p>\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}