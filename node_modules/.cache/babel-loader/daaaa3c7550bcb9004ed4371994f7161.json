{"ast":null,"code":"import _slicedToArray from \"/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/src/containers/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst apiKey = '1a3d76623f9ad51e2c3ae7f2409329a9';\nexport default function Home(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n\n  useEffect(() => {\n    //setCity('London');\n    //queryWeatherAPI('London');\n    //console.log('weather test', queryWeatherAPI('London'));\n    const urlParams = new URLSearchParams(props.location.search);\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n    setCity(cityParam);\n    const query = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(cityParam, \"&APPID=\").concat(apiKey);\n    axios.get(query).then(response => queryWeatherAPI(response));\n  }, []);\n  console.log('weather', weather);\n  return React.createElement(\"div\", {\n    className: \"weatherInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Weather in \", city), React.createElement(\"p\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Description: \", weather.data && weather.data.weather[0].description), React.createElement(\"p\", {\n    className: \"temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Current Temperature: \", weather.data && weather.data.main.temp, \" Kelvin\"), React.createElement(\"p\", {\n    className: \"humidity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Humidity: \", weather.data && weather.data.main.humidity));\n} // <p>Humidity: {weather.main ? weather.main.humidity : ''}</p>\n// <p>Humidity: {weather.main && weather.main.humidity}</p>","map":{"version":3,"sources":["/Users/paolladutra/Documents/DynamicWeb/Dynamic-Web-Exercise-Two/exercise-two/src/containers/Home.js"],"names":["React","useEffect","useState","axios","apiKey","Home","props","city","setCity","weather","setWeather","queryWeatherAPI","queryCity","get","then","response","console","log","catch","error","urlParams","URLSearchParams","location","search","cityParam","query","data","description","main","temp","humidity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACXJ,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,QAC5BK,IAD4B;AAAA,QACtBC,OADsB;;AAAA,qBAELN,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAE5BO,OAF4B;AAAA,QAEnBC,UAFmB;;AAInC,WAASC,eAAT,CAAyBC,SAAzB,EAAoC;AACnCT,IAAAA,KAAK,CAACU,GAAN,6DAA+DD,SAA/D,oBAAkFR,MAAlF,GACCU,IADD,CACM,UAASC,QAAT,EAAmB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAL,MAAAA,UAAU,CAACK,QAAD,CAAV;AACA,aAAOA,QAAP;AACA,KALD,EAMCG,KAND,CAMO,UAASC,KAAT,EAAgB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACA,aAAOA,KAAP;AACA,KATD;AAUA;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACA;AACA,UAAMmB,SAAS,GAAG,IAAIC,eAAJ,CAAoBf,KAAK,CAACgB,QAAN,CAAeC,MAAnC,CAAlB;AACA,UAAMC,SAAS,GAAGJ,SAAS,CAACP,GAAV,CAAc,MAAd,IAAwBO,SAAS,CAACP,GAAV,CAAc,MAAd,CAAxB,GAAgD,QAAlE;AACAL,IAAAA,OAAO,CAACgB,SAAD,CAAP;AAEA,UAAMC,KAAK,+DAAwDD,SAAxD,oBAA2EpB,MAA3E,CAAX;AACAD,IAAAA,KAAK,CAACU,GAAN,CAAUY,KAAV,EAAiBX,IAAjB,CAAsBC,QAAQ,IAAIJ,eAAe,CAACI,QAAD,CAAjD;AACA,GAVQ,EAUN,EAVM,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAEA,SACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiCF,IAAjC,CADD,EAEC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyCE,OAAO,CAACiB,IAAR,IAAgBjB,OAAO,CAACiB,IAAR,CAAajB,OAAb,CAAqB,CAArB,EAAwBkB,WAAjF,CAFD,EAGC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA0ClB,OAAO,CAACiB,IAAR,IAAgBjB,OAAO,CAACiB,IAAR,CAAaE,IAAb,CAAkBC,IAA5E,YAHD,EAIC;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmCpB,OAAO,CAACiB,IAAR,IAAgBjB,OAAO,CAACiB,IAAR,CAAaE,IAAb,CAAkBE,QAArE,CAJD,CADD;AAQA,C,CAED;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst apiKey = '1a3d76623f9ad51e2c3ae7f2409329a9';\n\nexport default function Home(props) {\n\tconst [city, setCity] = useState('');\n\tconst [weather, setWeather] = useState({});\n\t\n\tfunction queryWeatherAPI(queryCity) {\n\t\taxios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\n\t\t.then(function(response) {\n\t\t\tconsole.log('response', response);\n\t\t\tsetWeather(response);\n\t\t\treturn response;\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tconsole.log('error', error);\n\t\t\treturn error;\t\t\n\t\t});\n\t}\n\t\n\tuseEffect(() => {\n\t\t//setCity('London');\n\t\t//queryWeatherAPI('London');\n\t\t//console.log('weather test', queryWeatherAPI('London'));\n\t\tconst urlParams = new URLSearchParams(props.location.search)\n\t\tconst cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n\t\tsetCity(cityParam);\n\n\t\tconst query = `https://api.openweathermap.org/data/2.5/weather?q=${cityParam}&APPID=${apiKey}`\n\t\taxios.get(query).then(response => queryWeatherAPI(response));\n\t}, []);\n\t\n\tconsole.log('weather', weather);\n\t\n\treturn (\n\t\t<div className=\"weatherInfo\">\n\t\t\t<h1 className=\"city\">Weather in {city}</h1>\n\t\t\t<p className=\"description\">Description: {weather.data && weather.data.weather[0].description}</p>\n\t\t\t<p className=\"temp\">Current Temperature: {weather.data && weather.data.main.temp} Kelvin</p>\n\t\t\t<p className=\"humidity\">Humidity: {weather.data && weather.data.main.humidity}</p>\n\t\t</div>\n\t);\n}\n\n// <p>Humidity: {weather.main ? weather.main.humidity : ''}</p>\n// <p>Humidity: {weather.main && weather.main.humidity}</p>"]},"metadata":{},"sourceType":"module"}